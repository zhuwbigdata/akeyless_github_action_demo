name: Fetch Static Secrets example

#'on': push
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running this workflow'
        required: false
        default: 'Manual trigger'

jobs:
  show-oidc-claims:
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    permissions:
      id-token: write  # Required to request the OIDC token
      contents: read

    steps:
      - name: Request GitHub OIDC Token
        id: get_token
        run: |
          echo "🔐 Requesting OIDC token from GitHub..."
          TOKEN_JSON=$(curl -s -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL")
          echo "$TOKEN_JSON" | jq .
          echo "::set-output name=raw_token::$(echo "$TOKEN_JSON" | jq -r .value)"

      - name: Decode and Print JWT Claims
        run: |
          TOKEN="${{ steps.get_token.outputs.raw_token }}"
          echo "🔐 Decoding JWT..."
          echo "$TOKEN" | cut -d '.' -f2 | base64 -d | jq .

  fetch_secrets:
    #runs-on: self-hosted
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:

    - name: Fetch dynamic secrets from Akeyless
      uses: akeyless-community/akeyless-github-action@v1.0.1
      id: fetch-dynamic-secrets
      with:
          access-id: '${{ secrets.ACCESS_ID }}'
          dynamic-secrets: |
            - name: "/devops/database/postgres"
              output-name: "postgres_dynamic_secret"
          access-type: jwt
          export-secrets-to-outputs: true
          export-secrets-to-environment: true
          api-url: "https://gw-gke.wz.cs.akeyless.fans/api/v2"
          #api-url: "https://api.akeyless.io"

    - name: Export Secrets to Environment
      run: |
          echo '${{ steps.fetch-dynamic-secrets.outputs.postgres_dynamic_secret }}' | jq -r 'to_entries | map("POSTGRES_\(.key|ascii_upcase)=\(.value|tostring)") | .[]' >> $GITHUB_ENV
         
          
          
    - name: Verify Vars
      run: |
          echo "ENV: ${{ env.POSTGRES_PASSWORD }}" 
          echo "host: ${{ env.POSTGRES_HOST }}" >> secrets.txt
          echo "port: ${{ env.POSTGRES_PORT }}" >> secrets.txt
          echo "username: ${{ env.POSTGRES_USER }}" >> secrets.txt
          echo "password: ${{ env.POSTGRES_PASSWORD }}" >> secrets.txt
          echo "db_name: ${{ env.POSTGRES_DB_NAME }}" >> secrets.txt
          echo "ttl_in_minutes: ${{ env.POSTGRES_TTL_IN_MINUTES }}" >> secrets.txt           

    - name: Fetch static secrets from Akeyless
      if: false
      uses: akeyless-community/akeyless-github-action@v1.0.1
      id: fetch-secrets
      with:
        access-id: '${{ secrets.ACCESS_ID }}'
        access-type: jwt
        export-secrets-to-outputs: true
        export-secrets-to-environment: true
        static-secrets: |
          - name: "/devops/static_secret_encrypted_by_master"
            output-name: "my_static_secret"
        api-url: "https://api.akeyless.io"
   
    - name: Use Akeyless secret (environment variable)
      if: false
      env:
        SECRET: ${{ env.my_static_secret}}
      run: |
        # Use the secret securely within this step
        echo "Doing something with $SECRET"
     
    - name: Use Akeyless secret (step output)
      if: false
      run: |
        # Use the secret securely within this step
        echo "Doing something with ${{ steps.fetch-secrets.outputs.my_static_secret }}"
